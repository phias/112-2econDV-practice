---
title: "week 4"
author: "sophia"
format: html
editor: visual
---


# 處理資料
## 載入需要的套件
```{r}
library(tidyverse)
library(lubridate)
```
## 製作資料框
```{r}

exchange_rate <- tibble(
  date = rep(seq(as.Date("1960-01-01"), as.Date("1962-02-01"), by = "months"), 3),
  country = rep(c("美元", "日元", "英鎊"), each = 26),
  rate = runif(78, 20, 40)
)
```

## 計算匯率升值率 
```{r}
exchange_rate <- exchange_rate %>%
  arrange(country, date) %>%
  group_by(country) %>%
  mutate(rise_rate = (rate - lag(rate)) / lag(rate))
```

# 計算匯率升值率 
```{r}
exchange_rate <- exchange_rate %>%
  arrange(country, date) %>%
  group_by(country) %>%
  mutate(rise_rate = (rate - lag(rate)) / lag(rate))
head(exchange_rate)
# 計算匯率升值率 
exchange_rate <- exchange_rate %>%
  arrange(country, date) %>%
  group_by(country) %>%
  mutate(rise_rate = (rate - lag(rate)) / lag(rate))
```
## 繪圖
```{r}
# 濾出時間範圍內且國家為"美元", "日元", "英鎊" 的資料並繪圖
exchangeRateExample <- exchange_rate %>%
  filter(year(date) >= 1960 & year(date) <= 1962,
         month(date) >= 1 & month(date) <= 2,
         country %in% c("美元", "日元", "英鎊")) 

```

```{r}
library(dplyr)
library(readr)
## 製作資料框
exchangeRateExample %>%
  ggplot(aes(x = date, y = rise_rate, color = country)) +
  geom_line() +
  labs(x = "日期（1960年1月到1962年2月）",
       y = "對台幣匯率升值率", 
       color = "國家") +
  theme_minimal()


exchangeRate <- read_csv("BP01M01.csv")
View(exchangeRate)

# 計算新台幣對美元的匯率
exchangeRateExample %>%
  ggplot(aes(x = date, y = rise_rate, color = country)) +
  geom_line() +
  labs(x = "日期（1960年1月到1962年2月）",
       y = "對台幣匯率升值率", 
       color = "國家") +
  theme_minimal()

# 轉換日期
exchangeRate <- exchangeRate %>%
  tidyr::separate(期間, into = c("year", "month"), sep = "M", remove = FALSE) %>%
  mutate(date = as.Date(paste(year, month, "01", sep = "-"), format = "%Y-%m-%d"))



# 計算新台幣對美元的匯率
ntd_usd_rate <- exchangeRate$`新台幣NTD/USD`

# 計算其他貨幣的匯率，對新台幣的匯率，並儲存到新的欄位
exchangeRate <- exchangeRate %>%
  mutate(`日圓` = ntd_usd_rate / `日圓JPY/USD`,
         `英鎊` = ntd_usd_rate / (1/`英鎊USD/GBP`),
         `港幣` = ntd_usd_rate / `港幣HKD/USD`,
         `韓元` = ntd_usd_rate / `韓元KRW/USD`,
         `美元` = `新台幣NTD/USD`) %>%
  select(date, `日圓`:`美元`)

## 計算匯率成長率
exchangeRate <- exchangeRate %>%
  arrange(date) %>%
  mutate(across(c("美元", "日圓", "英鎊", "港幣", "韓元"), 
                ~( . - lag(.) ) / lag(.), 
                .names = "成長率_{.col}"))

## 改成長格式

exchangeRate <- exchangeRate %>% 
  pivot_longer(cols = starts_with("成長率"),
               names_to = "country",
               values_to = "升值率")

## 作圖

exchangeRate %>%
  ggplot(aes(x = date, y = 升值率, color = country)) +
  geom_line() +
  labs(x = "日期（1960年1月到1962年2月）",
       y = "對台幣匯率升值率", 
       color = "國家") +
  theme_minimal()



```

# 課堂練習
```{r}
library(ggplot2)
library(tidyverse)
library(readr)

#匯入資料表
EF05Y01 <- read_csv("~/Downloads/EF05Y01.csv")

# 濾出`股票市場-當期成交金額-原始值``債券市場-當期交易金額-原始值``外匯市場-全體外匯交易日平均淨額(百萬美元)-原始值`
exchangeRateExample <- EF05Y01 %>%
  filter(year(`期間`) >= 2000 & year(`期間`) <= 2023,
         index %in% c("股票市場-當期成交金額-原始值", "債券市場-當期交易金額-原始值", "外匯市場-全體外匯交易日平均淨額(百萬美元)-原始值")) 

# 將資料框轉換為長格式
exchangeMarket_long <- exchangeMarket_df %>%
 pivot_longer(cols = c(exchangeMarket_df$`股票市場-當期成交金額-原始值`, exchangeMarket_df$`債券市場-當期交易金額-原始值`, exchangeMarket_df$`外匯市場-全體外匯交易日平均淨額(百萬美元)-原始值`),
              names_to = "index",
              values_to = "amount")

# 繪製折線圖
results$line_plot <- ggplot(exchangeMarket_long, aes(x = year, y = amount, color = index, group = index)) +
 geom_line() +
 labs(title = "各指數金額變化趨勢",
      x = "年份",
      y = "金額",
      color = "指數") +
 theme_minimal()



```

